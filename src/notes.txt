state = (s_0, s_1, ..., s_n, ..., s_{k-1}, s_b, n)
where s_i = number of customers of class i present (if i < k and i \neq n),
where s_n = number of customers of class n in front of me
where s_b = number of customers of class n behind me
where n = my class


-- Customer arrives (not my class)
  + \lambda_i if \delta_i == 1 and \delta_{j\neq i} == 0; for all i \neq n

-- Customer arrives (my class)
  + \lambda_n if \delta_{k} == 1 and \delta_{j\neq k} == 0

-- Customer finishes service (in front of me)
  + B_i \mu_i if \delta_i == -1 and \delta_{j\neq i} == 0; for all i <= n

-- Customer finishes service (behind me)
  + ~B_i \mu_i if \delta_i == -1 and \delta_{j\neq i} == 0; for all i > n

-- I finish service
  + \mu_n if \sum_{i <= n} s_i < c and state2 = *

-- Customer changes class (from a class before mine (and those of my class before me) and not to my class)
  + (1 - B_i) \theta_{ij} if \delta_i == -1 and \delta_j == 1 and j \neq n and i <= n

-- Customer changes class (from a class after mine and not to my class)
  + (1 - ~B_i) \theta_{ij} if \delta_i == -1 and \delta_j == 1 and j \neq n and i >= n

-- Customer changes class (after me from my own class)
  + (1 - ~B_i) \theta_{nj} if \delta_k == -1 and \delta_j == 1 and j \neq n

-- Customer changes class (from a class before mine and to my class)
  + (1 - B_i) \theta_{in} if \delta_i == -1 and \delta_k == 1 and j \neq n and i < n

-- Customer changes class (from a class after mine and to my class)
  + (1 - ~B_i) \theta_{in} if \delta_i == -1 and \delta_k == 1 and j \neq n and i >= n
  
- I change class
  + \theta_{nj} if \delta_n == s_b and \delta_k == -s_b and \delta_{k+1} == j-n and \delta_{i\neq n,k,k+1}; for all j < k